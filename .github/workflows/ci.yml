name: CI

on:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "main"

env:
  FOUNDRY_PROFILE: ci
  REGISTRY: threesigmalabs.azurecr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  ci:
    strategy:
      fail-fast: true

    name: Foundry project
    runs-on: ubuntu-latest
    steps:
      - name: "Check out the repo"
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: "Install Node.js"
        uses: "actions/setup-node@v3"
        with:
          cache: "yarn"
          node-version: "16"

      - name: "Install the Node.js dependencies"
        run: "yarn install --immutable"

      - name: "Lint the contracts"
        run: "yarn lint"

      - name: "Add lint summary"
        run: |
          echo "## Lint" >> $GITHUB_STEP_SUMMARY
          echo "✅ Passed" >> $GITHUB_STEP_SUMMARY

      - name: "Show the Foundry config"
        run: "forge config"

      - name: Build the contracts
        run: |
          forge --version
          forge build --sizes
        id: build

      - name: Run the tests
        run: |
          forge test -vvv
        id: test

      - name: "Add test summary"
        run: |
          echo "## Tests" >> $GITHUB_STEP_SUMMARY
          echo "✅ Passed" >> $GITHUB_STEP_SUMMARY

  container:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest
    # https://docs.github.com/en/actions/reference/authentication-in-a-workflow
    permissions:
      id-token: write
      packages: write
      contents: read
    timeout-minutes: 60

    steps:
      - name: Checkout repository
        id: checkout
        uses: actions/checkout@v3

      - name: Install Docker BuildX
        uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true

      # Login against a Docker registry except on PR
      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "Docker Login"
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Creates an additional 'latest' or 'nightly' tag
      # If the job is triggered via cron schedule, tag nightly and nightly-{SHA}
      # If the job is triggered via workflow dispatch and on a master branch, tag branch and latest
      # Otherwise, just tag as the branch name
      - name: Finalize Docker Metadata
        id: docker_tagging
        run: |
          if [[ "${{ github.event_name }}" == 'schedule' ]]; then
            echo "cron trigger, assigning nightly tag"
            echo "::set-output name=docker_tags::${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:nightly,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:nightly-${GITHUB_SHA}"
          elif [[ "${GITHUB_REF##*/}" == "main" ]] || [[ ${GITHUB_REF##*/} == "master" ]]; then
            echo "manual trigger from master/main branch, assigning latest tag"
            echo "::set-output name=docker_tags::${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${GITHUB_REF##*/},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
          else
            echo "Neither scheduled nor manual release from main branch. Just tagging as branch name"
            echo "::set-output name=docker_tags::${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${GITHUB_REF##*/}"
          fi

      # Log docker metadata to explicitly know what is being pushed
      - name: Inspect Docker Metadata
        run: |
          echo "TAGS -> ${{ steps.docker_tagging.outputs.docker_tags }}"
          echo "LABELS ->  ${{ steps.meta.outputs.labels }}"

      # Build and push Docker image
      # https://github.com/docker/build-push-action
      # https://github.com/docker/build-push-action/blob/master/docs/advanced/cache.md
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.docker_tagging.outputs.docker_tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
